schema.file=/etltest/pde2/cfg/schema
create.sql='/etltest/pde2/huawei.createtables.xml.sql_'+WFID
db.prefix=test
#process.type=checkSchema
#process.type=genCsv
vars=groupFun
groupFun=Java.type('etl.util.GroupFun')
lock.type=jvm
zookeeper.url=127.0.0.1:2181
sys.xmlinput.start=<Trans>
sys.xmlinput.end=</Trans>
sys.xmlinput.row.start=<Trans>
sys.xmlinput.row.end=</Trans>
sys.xmlinput.row.max.number=1

node.root.path=/Trans
tables=Trans,LCSAP

Trans.node.associate=TransId
Trans.node.associate=BeginTime
Trans.node.associate=Messages/MLP/EME_LIA/svc_result/eme_lia/eme_pos/msid
Trans.node.associate=Messages/MLP/EME_LIR/@time
Trans.node.associate=Messages/MLP/EME_LIA/@time
Trans.node.associate=Messages/MLP/EME_LIA/svc_result/eme_lia/eme_pos/@pos_method
Trans.node.associate=Messages/MLP/EME_LIA/svc_result/eme_lia/eme_pos/@result_type
Trans.node.associate=Messages/MLP/EME_LIA/svc_result/eme_lia/eme_pos/pd/shape/CircularArea/coord/X
Trans.node.associate=Messages/MLP/EME_LIA/svc_result/eme_lia/eme_pos/pd/shape/CircularArea/coord/Y
Trans.node.associate=Messages/MLP/EME_LIA/svc_result/eme_lia/eme_pos/pd/shape/CircularArea/radius
Trans.node.associate=Messages/MLP/EME_LIA/svc_result/eme_lia/NSN_CellIdentity/NSN_utran-cell-id-3gpp

LCSAP.node.associate=TransId
LCSAP.node.associate=BeginTime
LCSAP.node.associate=Messages/LCSAP/LocationRequest/IMSI
LCSAP.node.associate=Messages/LCSAP/LocationRequest/IMEI
LCSAP.node.associate=Messages/LCSAP[@dir='uplink' and LocationRequest[LCSClientType[text()='EmergencyServices']]/MessageType/TypeOfMessage[text()='InitiatingMessage']]/@time
LCSAP.node.associate=Messages/LCSAP[@dir='downlink' and LocationResponse/MessageType/TypeOfMessage[text()='SuccessfulOutcome']]/@time
LCSAP.node.associate=Positioning/CandidatePosition/PositionResult/PosMethod
LCSAP.node.associate=Messages/LCSAP/LocationResponse/MessageType/TypeOfMessage
LCSAP.node.associate=Messages/LCSAP/LocationResponse/LocationEstimate/EllipsoidPointWithAltitudeAndUncertaintyEllipsoid/GeographicalCoordinates/DegreesOfLatitude
LCSAP.node.associate=Messages/LCSAP/LocationResponse/LocationEstimate/EllipsoidPointWithAltitudeAndUncertaintyEllipsoid/GeographicalCoordinates/DegreesOfLongitude
LCSAP.node.associate=Messages/MLP/EME_LIA/svc_result/eme_lia/eme_pos/pd/shape/CircularArea/radius
LCSAP.node.associate=Messages/MLP/EME_LIA/svc_result/eme_lia/NSN_CellIdentity/NSN_utran-cell-id-3gpp
LCSAP.node.associate=Messages/LCSAP/LocationRequest/LCSClientType

Trans.node.start=./TransId
Trans.node.skip=./TransId
LCSAP.node.start=./TransId
LCSAP.node.skip=./TransId

Trans.insert.filter.condition=record.MLP_RequestTime != null
LCSAP.insert.filter.condition=record.MLP_RequestTime != null

Trans.setWhenExist=MLP_RequestTime:MLP_RequestTime:groupFun.dtStandardize(record.MLP_RequestTime\,"yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'");
Trans.setWhenExist=MLP_ResponseTime:MLP_ResponseTime:groupFun.dtStandardize(record.MLP_ResponseTime\,"yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'");
Trans.setWhenExist=Date:Date:groupFun.dtStandardize(record.Date\,"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
Trans.setWhenExist=Primary_Id:Primary_Id:groupFun.getSubString(record.Primary_Id\,"[\\\\\\\\D]*([\\\\\\\\d]+)[\\\\\\\\s\\\\\\\\S]*");
Trans.set=Site_Id:groupFun.getSubString(filename\,"[\\\\\\\\s\\\\\\\\S]+?([\\\\\\\\d]+)\\\\\\\\.[\\\\\\\\s\\\\\\\\S]*");
Trans.set=TTFF:groupFun.dateSubtract(record.MLP_RequestTime\,record.MLP_ResponseTime);


LCSAP.setWhenExist=MLP_RequestTime:MLP_RequestTime:groupFun.dtStandardize(record.MLP_RequestTime\,"yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'");
LCSAP.setWhenExist=MLP_ResponseTime:MLP_ResponseTime:groupFun.dtStandardize(record.MLP_ResponseTime\,"yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'");
LCSAP.setWhenExist=Date:Date:groupFun.dtStandardize(record.Date\,"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
LCSAP.setWhenExist=Primary_Id:Primary_Id:(record.Primary_Id==null)?record.IMEI:record.Primary_Id;
LCSAP.setWhenExist=Primary_Id:Primary_Id:groupFun.getSubString(record.Primary_Id\,"[\\\\\\\\D]*([\\\\\\\\d]+)[\\\\\\\\s\\\\\\\\S]*");
LCSAP.set=Site_Id:groupFun.getSubString(filename\,"[\\\\\\\\s\\\\\\\\S]+?([\\\\\\\\d]+)\\\\\\\\.[\\\\\\\\s\\\\\\\\S]*");
LCSAP.set=TTFF:groupFun.dateSubtract(record.MLP_RequestTime\,record.MLP_ResponseTime);


